/// <summary>
/// Deletes the $Item$ asynchronous.
/// </summary>
/// <param name="callContext">The call context.</param>
/// <param name="$item$">The $Item$.</param>
/// <param name="$item$DataItems">The $Item$DataItems.</param>
/// <returns></returns>
public async Task<CallResponse<bool>> Delete$Item$Async(IRepositoryCallContext callContext, $Product$$Item$DataItem $item$, PlusObservableCollection<$Product$$Item$DataItem> $item$DataItems)
{
	try
	{
		$Product$$Item$ $dto$ = _$product$DtoFactory.Create$Item$FromDataItem($item$);
		$dto$.SaveFlag = SaveFlag.Delete;
		CallResponse<$Product$$Item$> response = await _$product$$Item$Service.Save$Item$Async(callContext, dto);
		if (response.IsSuccess)
		{
			$item$DataItems.Remove($item$);
			return CallResponse.FromSuccessfulResult(true);
		}
		
		return CallResponse.FromFailedResult<bool>(false);
	}
	catch (Exception ex)
	{
		return CallResponse.FromFailedResult<bool>(false);
	}
}