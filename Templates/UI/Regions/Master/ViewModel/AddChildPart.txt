private bool Add$Item$CommandCanExecute()
{
	return !IsInReadOnlyMode && !IsBusy && IsInitialLoadingCompleted && Selected$Parent$DataItem != null;
}

private async Task Add$Item$CommandExecuted()
{
	IsGlobalBusy = true;
	CallResponse<$Product$$Item$DataItem> response = await _$product$$Dialog$Repository.AddNew$Item$Async(CreateNewCallContext(true), Selected$Parent$DataItem.$Item$s);
	if (response.IsSuccess)
	{
		$Product$$Item$DataItem new$Product$$Item$DataItem = response.Result;
		Selected$Item$DataItem = new$Product$$Item$DataItem;
		new$Product$$Item$DataItem.HasAnyChanges = true;
		new$Product$$Item$DataItem.PropertyChanged += New$Product$$Item$DataItem_PropertyChanged;
		RaiseCanExecuteChanged();
	}
	IsGlobalBusy = false;
}

private void New$Product$$Item$DataItem_PropertyChanged(object sender, PropertyChangedEventArgs e)
{
	RaiseCanExecuteChanged();
}

