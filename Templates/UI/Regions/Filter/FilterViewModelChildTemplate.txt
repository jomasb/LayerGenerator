/// <summary>
/// Definition of the view model for $Product$$Item$DataItemFilter.
/// </summary>
/// <author></author>
/// <company>abat+ GmbH</company>
/// <date></date>
public class $Product$$Item$DataItemFilterViewModel : FilterViewModelBase<$Product$$Item$DataItem>
{
	$filterMembers$
	
	public $Product$$Item$DataItemFilterViewModel(IFilterSourceProvider<$Product$$Item$DataItem> filterSourceProvider)
		: base(filterSourceProvider)
	{
	}
	
	/// <summary>
	/// Builds the filter.
	/// </summary>
	/// <returns></returns>
	protected override Predicate<$Product$$Item$DataItem> BuildFilter()
	{
		var filterBuilder = new FilterBuilder<$Product$$Item$DataItem, $Product$$Item$DataItemFilterViewModel>(this);

		var filter = filterBuilder
			$filterPredicates$
			.Build();

		return filter;
	}
	
	/// <summary>
	/// Called when /[source collection changed].
	/// </summary>
	protected override void OnSourceCollectionChanged()
	{
		$filterPredicateReset$
		$filterMultiSelectorsInitialize$
	}
	
	$filterProperties$
}