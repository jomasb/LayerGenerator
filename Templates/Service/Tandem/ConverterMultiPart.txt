/// <summary>
/// Implements the converter of the $item$s.
/// This converter should be used in a service that works without Business Objects!!!.
/// </summary>
/// <author></author>
/// <company>abat+ GmbH</company>
/// <date></date>
public class $Product$$Item$Converter : Converter<I$Product$$Item$Service>$specialContent1$
{
	#region I$Server$<YourRequest>BusinessObject Members
	/// <summary>
	/// Convert the $Product$$Item$List business data to message $Server$<YourRequest> data
	/// </summary>
	public void ConvertBusinessDataToMessageData$Server$<YourRequest>($Server$<YourRequest> serviceMessage)
	{
		var transcode = serviceMessage.Transcode();
		if (!transcode.Equals($Server$<YourRequest>Transcode.$TranscodeRead$) &&
			!transcode.Equals($Server$<YourRequest>Transcode.$TranscodeWrite$))
		{
			return;
		}

		if (transcode.Equals($Server$<YourRequest>Transcode.$TranscodeWrite$))
		{
			serviceMessage.MaxLupdTimestamp<YourTable>(PlusFormat.FormatTandemTimestamp26(DataProvider.MaxLupdTimestamp));

			IList<$Product$$Item$> $item$s = Arguments["$Item$sToSave"] as IList<$Product$$Item$>;

			int offset = (int)Arguments["$Item$sToSaveOffset"];

			int refCount = $item$s.Count;
			serviceMessage.RefTabAnz(refCount);

			int index = offset;

			for (; index < refCount && (index - offset) < $Server$<YourRequest>.RefTab_MaxTimes;
				index++)
			{
				var $item$ = $item$s.ElementAt(index);
				Fill$Item$(serviceMessage, $item$, index);
				switch ($item$.SaveFlag)
				{
					case SaveFlag.Delete:
						serviceMessage.BearbeitungsKz("D", index);
						break;
					case SaveFlag.Modified:
						serviceMessage.BearbeitungsKz("U", index);
						break;
					case SaveFlag.New:
						serviceMessage.BearbeitungsKz("I", index);
						break;
				}
			}

			Arguments["$Item$sToSaveOffset"] = index;
		}
	}

	#endregion I$Server$<YourRequest>BusinessObject Members

	#region I$Server$$Reply$BusinessObject Members

	/// <summary>
	/// Convert the message  $Server$$Reply$ data to $Product$$Item$List business data
	///</summary>
	public void ConvertMessageDataToBusinessData$Server$$Reply$($Server$$Reply$ serviceMessage)
	{
		var transcode = serviceMessage.Transcode();
		if (!transcode.Equals($Server$$Reply$Transcode.$TranscodeRead$) &&
			!transcode.Equals($Server$$Reply$Transcode.$TranscodeWrite$))
			return;
		if (serviceMessage == null)
		{
			throw new ArgumentNullException("serviceMessage");
		}
		if (!serviceMessage.IsTranssteuerungOk())
			return;

		IList<$Product$$Item$> $item$s = DataProvider.$Product$$Item$s;
		for (int i = 0; i < serviceMessage.$tabanz$(); i++)
		{
			$Product$$Item$ $item$ = new $Product$$Item$()
			{
				$specialContent1$
				LupdTimestamp = PlusFormat.ParseTandemTimestamp26(serviceMessage.LupdTimestampF6(i)),
				LupdUser = serviceMessage.LupdUser(i)
			};
			$item$s.Add($item$);
		}
	}

	#endregion I$Server$$Reply$BusinessObject Members

	
}